// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package aqcommon.actions;

import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.ObjectMapper;
import io.burt.jmespath.JmesPath;
import io.burt.jmespath.RuntimeConfiguration;
import io.burt.jmespath.Expression;
import io.burt.jmespath.jackson.JacksonRuntime;

public class ExecuteJMESPathExpression extends CustomJavaAction<java.lang.String>
{
	private final java.lang.String JsonToSearch;
	private final java.lang.String SearchExpression;
	private final java.lang.Boolean WithSilentTypeErrors;
	private final java.lang.Boolean ResultValueAsText;

	public ExecuteJMESPathExpression(
		IContext context,
		java.lang.String _jsonToSearch,
		java.lang.String _searchExpression,
		java.lang.Boolean _withSilentTypeErrors,
		java.lang.Boolean _resultValueAsText
	)
	{
		super(context);
		this.JsonToSearch = _jsonToSearch;
		this.SearchExpression = _searchExpression;
		this.WithSilentTypeErrors = _withSilentTypeErrors;
		this.ResultValueAsText = _resultValueAsText;
	}

	@java.lang.Override
	public java.lang.String executeAction() throws Exception
	{
		// BEGIN USER CODE
		RuntimeConfiguration configuration = new RuntimeConfiguration.Builder()
                .withSilentTypeErrors(WithSilentTypeErrors)
                .build();
		JmesPath<JsonNode> jmespath = new JacksonRuntime(configuration);
		Expression<JsonNode> expression = jmespath.compile(SearchExpression);
		ObjectMapper mapper = new ObjectMapper();
		JsonNode input = mapper.readTree(JsonToSearch);
		JsonNode result = expression.search(input);
		if(ResultValueAsText) {
			return result.asText();
		}
		return result.toString();		
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 * @return a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "ExecuteJMESPathExpression";
	}

	// BEGIN EXTRA CODE
	// END EXTRA CODE
}
