// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package treeview.proxies;

public class TreeItem implements com.mendix.systemwideinterfaces.core.IEntityProxy
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject treeItemMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "TreeView.TreeItem";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		Label("Label"),
		ObjectId("ObjectId"),
		IsDisabled("IsDisabled"),
		ItemType("ItemType"),
		TreeItem_ChildTreeItem("TreeView.TreeItem_ChildTreeItem"),
		TreeItem_Tree("TreeView.TreeItem_Tree"),
		ChildTreeItem_TreeItem("TreeView.ChildTreeItem_TreeItem");

		private final java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public TreeItem(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, entityName));
	}

	protected TreeItem(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject treeItemMendixObject)
	{
		if (treeItemMendixObject == null) {
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		}
		if (!com.mendix.core.Core.isSubClassOf(entityName, treeItemMendixObject.getType())) {
			throw new java.lang.IllegalArgumentException(String.format("The given object is not a %s", entityName));
		}	

		this.treeItemMendixObject = treeItemMendixObject;
		this.context = context;
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 * @param context The context to be used
	 * @param mendixObject The Mendix object for the new instance
	 * @return a new instance of this proxy class
	 */
	public static treeview.proxies.TreeItem initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new treeview.proxies.TreeItem(context, mendixObject);
	}

	public static treeview.proxies.TreeItem load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return treeview.proxies.TreeItem.initialize(context, mendixObject);
	}

	public static java.util.List<treeview.proxies.TreeItem> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		return com.mendix.core.Core.createXPathQuery(String.format("//%1$s%2$s", entityName, xpathConstraint))
			.execute(context)
			.stream()
			.map(obj -> treeview.proxies.TreeItem.initialize(context, obj))
			.collect(java.util.stream.Collectors.toList());
	}

	/**
	 * @return value of Label
	 */
	public final java.lang.String getLabel()
	{
		return getLabel(getContext());
	}

	/**
	 * @param context
	 * @return value of Label
	 */
	public final java.lang.String getLabel(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Label.toString());
	}

	/**
	 * Set value of Label
	 * @param label
	 */
	public final void setLabel(java.lang.String label)
	{
		setLabel(getContext(), label);
	}

	/**
	 * Set value of Label
	 * @param context
	 * @param label
	 */
	public final void setLabel(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String label)
	{
		getMendixObject().setValue(context, MemberNames.Label.toString(), label);
	}

	/**
	 * @return value of ObjectId
	 */
	public final java.lang.String getObjectId()
	{
		return getObjectId(getContext());
	}

	/**
	 * @param context
	 * @return value of ObjectId
	 */
	public final java.lang.String getObjectId(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.ObjectId.toString());
	}

	/**
	 * Set value of ObjectId
	 * @param objectid
	 */
	public final void setObjectId(java.lang.String objectid)
	{
		setObjectId(getContext(), objectid);
	}

	/**
	 * Set value of ObjectId
	 * @param context
	 * @param objectid
	 */
	public final void setObjectId(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String objectid)
	{
		getMendixObject().setValue(context, MemberNames.ObjectId.toString(), objectid);
	}

	/**
	 * @return value of IsDisabled
	 */
	public final java.lang.Boolean getIsDisabled()
	{
		return getIsDisabled(getContext());
	}

	/**
	 * @param context
	 * @return value of IsDisabled
	 */
	public final java.lang.Boolean getIsDisabled(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.IsDisabled.toString());
	}

	/**
	 * Set value of IsDisabled
	 * @param isdisabled
	 */
	public final void setIsDisabled(java.lang.Boolean isdisabled)
	{
		setIsDisabled(getContext(), isdisabled);
	}

	/**
	 * Set value of IsDisabled
	 * @param context
	 * @param isdisabled
	 */
	public final void setIsDisabled(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean isdisabled)
	{
		getMendixObject().setValue(context, MemberNames.IsDisabled.toString(), isdisabled);
	}

	/**
	 * Get value of ItemType
	 * @param itemtype
	 */
	public final treeview.proxies.ItemType getItemType()
	{
		return getItemType(getContext());
	}

	/**
	 * @param context
	 * @return value of ItemType
	 */
	public final treeview.proxies.ItemType getItemType(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.ItemType.toString());
		if (obj == null) {
			return null;
		}
		return treeview.proxies.ItemType.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of ItemType
	 * @param itemtype
	 */
	public final void setItemType(treeview.proxies.ItemType itemtype)
	{
		setItemType(getContext(), itemtype);
	}

	/**
	 * Set value of ItemType
	 * @param context
	 * @param itemtype
	 */
	public final void setItemType(com.mendix.systemwideinterfaces.core.IContext context, treeview.proxies.ItemType itemtype)
	{
		if (itemtype != null) {
			getMendixObject().setValue(context, MemberNames.ItemType.toString(), itemtype.toString());
		} else {
			getMendixObject().setValue(context, MemberNames.ItemType.toString(), null);
		}
	}

	/**
	 * @throws com.mendix.core.CoreException
	 * @return value of TreeItem_ChildTreeItem
	 */
	public final java.util.List<treeview.proxies.TreeItem> getTreeItem_ChildTreeItem() throws com.mendix.core.CoreException
	{
		return getTreeItem_ChildTreeItem(getContext());
	}

	/**
	 * @param context
	 * @return value of TreeItem_ChildTreeItem
	 * @throws com.mendix.core.CoreException
	 */
	@SuppressWarnings("unchecked")
	public final java.util.List<treeview.proxies.TreeItem> getTreeItem_ChildTreeItem(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		java.util.List<treeview.proxies.TreeItem> result = new java.util.ArrayList<>();
		Object valueObject = getMendixObject().getValue(context, MemberNames.TreeItem_ChildTreeItem.toString());
		if (valueObject == null) {
			return result;
		}
		for (com.mendix.systemwideinterfaces.core.IMendixObject mendixObject : com.mendix.core.Core.retrieveIdList(context, (java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier>) valueObject)) {
			result.add(treeview.proxies.TreeItem.initialize(context, mendixObject));
		}
		return result;
	}

	/**
	 * Set value of TreeItem_ChildTreeItem
	 * @param treeitem_childtreeitem
	 */
	public final void setTreeItem_ChildTreeItem(java.util.List<treeview.proxies.TreeItem> treeitem_childtreeitem)
	{
		setTreeItem_ChildTreeItem(getContext(), treeitem_childtreeitem);
	}

	/**
	 * Set value of TreeItem_ChildTreeItem
	 * @param context
	 * @param treeitem_childtreeitem
	 */
	public final void setTreeItem_ChildTreeItem(com.mendix.systemwideinterfaces.core.IContext context, java.util.List<treeview.proxies.TreeItem> treeitem_childtreeitem)
	{
		var identifiers = treeitem_childtreeitem
			.stream()
			.map(proxyObject -> proxyObject.getMendixObject().getId())
			.collect(java.util.stream.Collectors.toList());
		
		getMendixObject().setValue(context, MemberNames.TreeItem_ChildTreeItem.toString(), identifiers);
	}

	/**
	 * @throws com.mendix.core.CoreException
	 * @return value of TreeItem_Tree
	 */
	public final treeview.proxies.Tree getTreeItem_Tree() throws com.mendix.core.CoreException
	{
		return getTreeItem_Tree(getContext());
	}

	/**
	 * @param context
	 * @return value of TreeItem_Tree
	 * @throws com.mendix.core.CoreException
	 */
	public final treeview.proxies.Tree getTreeItem_Tree(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		treeview.proxies.Tree result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.TreeItem_Tree.toString());
		if (identifier != null) {
			result = treeview.proxies.Tree.load(context, identifier);
		}
		return result;
	}

	/**
	 * Set value of TreeItem_Tree
	 * @param treeitem_tree
	 */
	public final void setTreeItem_Tree(treeview.proxies.Tree treeitem_tree)
	{
		setTreeItem_Tree(getContext(), treeitem_tree);
	}

	/**
	 * Set value of TreeItem_Tree
	 * @param context
	 * @param treeitem_tree
	 */
	public final void setTreeItem_Tree(com.mendix.systemwideinterfaces.core.IContext context, treeview.proxies.Tree treeitem_tree)
	{
		if (treeitem_tree == null) {
			getMendixObject().setValue(context, MemberNames.TreeItem_Tree.toString(), null);
		} else {
			getMendixObject().setValue(context, MemberNames.TreeItem_Tree.toString(), treeitem_tree.getMendixObject().getId());
		}
	}

	/**
	 * @throws com.mendix.core.CoreException
	 * @return value of ChildTreeItem_TreeItem
	 */
	public final treeview.proxies.TreeItem getChildTreeItem_TreeItem() throws com.mendix.core.CoreException
	{
		return getChildTreeItem_TreeItem(getContext());
	}

	/**
	 * @param context
	 * @return value of ChildTreeItem_TreeItem
	 * @throws com.mendix.core.CoreException
	 */
	public final treeview.proxies.TreeItem getChildTreeItem_TreeItem(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		treeview.proxies.TreeItem result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.ChildTreeItem_TreeItem.toString());
		if (identifier != null) {
			result = treeview.proxies.TreeItem.load(context, identifier);
		}
		return result;
	}

	/**
	 * Set value of ChildTreeItem_TreeItem
	 * @param childtreeitem_treeitem
	 */
	public final void setChildTreeItem_TreeItem(treeview.proxies.TreeItem childtreeitem_treeitem)
	{
		setChildTreeItem_TreeItem(getContext(), childtreeitem_treeitem);
	}

	/**
	 * Set value of ChildTreeItem_TreeItem
	 * @param context
	 * @param childtreeitem_treeitem
	 */
	public final void setChildTreeItem_TreeItem(com.mendix.systemwideinterfaces.core.IContext context, treeview.proxies.TreeItem childtreeitem_treeitem)
	{
		if (childtreeitem_treeitem == null) {
			getMendixObject().setValue(context, MemberNames.ChildTreeItem_TreeItem.toString(), null);
		} else {
			getMendixObject().setValue(context, MemberNames.ChildTreeItem_TreeItem.toString(), childtreeitem_treeitem.getMendixObject().getId());
		}
	}

	@java.lang.Override
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return treeItemMendixObject;
	}

	@java.lang.Override
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this) {
			return true;
		}
		if (obj != null && getClass().equals(obj.getClass()))
		{
			final treeview.proxies.TreeItem that = (treeview.proxies.TreeItem) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

  /**
   * Gives full name ("Module.Entity" name) of the type of the entity.
   *
   * @return the name
   */
	public static java.lang.String getType()
	{
		return entityName;
	}
}
